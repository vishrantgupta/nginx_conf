# Weight: 10000 Cloud: 0, Canary 0
user nginx nginx;
worker_processes auto;
pid /var/local/nginx/nginx.pid;
events {
    worker_connections 65000;
    multi_accept on;
    use epoll;
}

worker_rlimit_nofile 65000;

http {
    include /usr/local/share/nginx/conf/mime.types;

    default_type application/octet-stream;
    lua_package_path "/usr/local/config/templates/?.lua";
    lua_load_resty_core off;


    upstream serverB {
        hash "${arg_visitor_id}${arg_consumer_id}" consistent;
        server external_server:5000 weight=5000 max_conns=0 fail_timeout=0 max_fails=0;
    }

    upstream fallback {
        server fallback.service weight=1 max_conns=200 fail_timeout=0 max_fails=0;
    }

    log_format main
        '[$time_local] - $remote_addr '
        '"$request_method" "$modified_uri" "$server_protocol" $status $bytes_sent '
        '"$scheme" "$http_referer" "$http_user_agent" '
        '"$http_x_forwarded_for" '
        '"$cookie_b" "$host" '
        '"$request_time" "$upstream_response_time" "$msec" '
        '"$http_x_request_id" "$from_fallback" "$proxy_host"';
    access_log /var/local/nginx/logs/access_log main;



    error_log /var/local/nginx/logs/error_log debug;
    error_log  /dev/stdout debug;

    variables_hash_max_size 2048;
    variables_hash_bucket_size 128;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay off;
    gzip        off;

    server {
    set $modified_uri       "-";
    set $from_fallback      "N";
    listen                  80;
    server_name             $hostname;
    server_name_in_redirect off;
    port_in_redirect        off;
    root                    /var/local/nginx/data;
    allow                   all;
    resolver                10.20.8.33 10.20.10.53;
    proxy_http_version      1.1;
    proxy_next_upstream     off;
    merge_slashes off;

    location ~ v1/api {

        proxy_intercept_errors on;
        error_page 500 503 504 = @fallback;

        add_header            X-Response-Fallback "false";

        if ($arg_platform = "email") {
            return 403;
        }

        proxy_buffering       off;
        proxy_set_header      Host $host;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect        off;
        proxy_connect_timeout 100ms;
        proxy_send_timeout    1500ms;
        proxy_read_timeout    2000ms;
        proxy_pass            http://serverB;
    }

    location @fallback {
        set $from_fallback      "Y";

        rewrite (.*)//+(.*) $1/$2 break;

        proxy_buffering       off;
        proxy_set_header      Host $host;
        proxy_redirect        off;

        add_header            X-Response-Fallback "true";
        proxy_connect_timeout 100ms;
        proxy_send_timeout    500ms;
        proxy_read_timeout    500ms;
        proxy_pass http://fallback;
    }

}